{"version":3,"sources":["actions/types.js","configs/constants.js","components/AddEntry/AddEntry.js","components/AddEntry/index.js","actions/listActions.js","components/Entry/Entry.js","components/Entry/index.js","components/GroceryList/GroceryList.js","components/App/App.js","components/App/index.js","reportWebVitals.js","reducers/listReducer.js","reducers/index.js","store.js","localStorage.js","index.js"],"names":["ADD_ENTRY","DELETE_ENTRY","CHANGE_STATUS","LIST","RAN_OUT","HAVE","ALL","AddEntry","useState","name","setName","priority","setPriority","status","setStatus","dispatch","useDispatch","InputGroup","className","value","onChange","e","target","FormControl","placeholder","aria-label","aria-describedby","DropdownButton","variant","title","id","onSelect","Dropdown","Item","eventKey","Append","Button","onClick","timeStamp","moment","format","type","payload","uuidv4","statusHistory","addEntry","Entry","entry","statusHistoryList","map","ListGroup","Card","Header","as","Body","Subtitle","Footer","statusItem","changeStatus","deleteEntry","GroceryList","filterParam","setFilterParam","listItems","useSelector","state","list","filter","sort","a","b","priorityCompare","localeCompare","console","log","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","listReducer","action","obj","combineReducers","serializedData","localStorage","getItem","parsedData","JSON","parse","Array","isArray","err","loadData","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","subscribe","data","getState","stringify","setItem","saveData","ReactDOM","render","document","getElementById"],"mappings":"4NAAaA,EAAY,YACZC,EAAe,eACfC,EAAgB,gB,wCCFhBC,EAAO,OACPC,EAAU,SACVC,EAAO,OACPC,EAAM,M,OCsEJC,ICxEAA,EDWf,WAAqB,IAAD,EACMC,mBAAS,IADf,mBACXC,EADW,KACLC,EADK,OAEcF,mBAAS,KAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGUJ,mBAASJ,GAHnB,mBAGXS,EAHW,KAGHC,EAHG,KAKZC,EAAWC,cAiBjB,OACE,8BACE,eAACC,EAAA,EAAD,CAAYC,UAAU,OAAOC,MAAOV,EAAMW,SAjBtB,SAACC,GACvBX,EAAQW,EAAEC,OAAOH,QAgBf,UACE,cAACI,EAAA,EAAD,CACEC,YAAY,YACZC,aAAW,YACXC,mBAAiB,cAEnB,eAACC,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAM,SACNC,GAAG,8BACHC,SAnBgB,SAACV,GACvBP,EAAUO,IAcN,UAME,cAACW,EAAA,EAASC,KAAV,CAAeC,SAAU9B,EAAzB,SAAmCA,IACnC,cAAC4B,EAAA,EAASC,KAAV,CAAeC,SAAU7B,EAAzB,SAAgCA,OAElC,eAACsB,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAM,WACNC,GAAG,gCACHC,SAxBkB,SAACV,GACzBT,EAAYS,IAmBR,UAME,cAACW,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,eACA,cAACF,EAAA,EAASC,KAAV,CAAeC,SAAS,IAAxB,kBAEF,cAACjB,EAAA,EAAWkB,OAAZ,UACE,cAACC,EAAA,EAAD,CAAQR,QAAQ,oBAAoBS,QAzCf,WAC3BtB,EEpBoB,SAACN,EAAMI,EAAQF,GAAf,OAA4B,SAACI,GACnD,IAAMuB,EAAYC,MAASC,OAAO,uBAClCzB,EAAS,CACP0B,KAAMzC,EACN0C,QAAS,CACPZ,GAAIa,cACJlC,OACAmC,cAAe,CAAC,CAAE/B,SAAQyB,cAC1B3B,eFYOkC,CAASpC,EAAMI,EAAQF,KAwC1B,8B,gCGPKmC,ICxDAA,EDSf,YAAkE,IAAD,IAAhDC,MAASjB,EAAuC,EAAvCA,GAAIrB,EAAmC,EAAnCA,KAAMmC,EAA6B,EAA7BA,cAAejC,EAAc,EAAdA,SAC3CqC,EAAoBJ,EAAcK,KAAI,gBAAGpC,EAAH,EAAGA,OAAQyB,EAAX,EAAWA,UAAX,OAC1C,eAACY,EAAA,EAAUjB,KAAX,WACGK,EADH,MACiBzB,IADIyB,MAIjBvB,EAAWC,cAOjB,OACE,eAACmC,EAAA,EAAD,CAAMjC,UAAU,OAAhB,UACE,cAACiC,EAAA,EAAKC,OAAN,CAAaC,GAAG,KAAhB,SAAsB5C,IACtB,eAAC0C,EAAA,EAAKG,KAAN,WACE,eAACH,EAAA,EAAKI,SAAN,CAAerC,UAAU,kBAAzB,6BACmB0B,EAAc,GAAG/B,SADW,UAG/C,eAACsC,EAAA,EAAKI,SAAN,CAAerC,UAAU,kBAAzB,4BAEE,cAACgC,EAAA,EAAD,CAAWtB,QAAQ,QAAnB,SAA4BoB,MAFiB,UAI/C,eAACG,EAAA,EAAKI,SAAN,CAAerC,UAAU,kBAAzB,uBACaP,IADkC,eAIjD,eAACwC,EAAA,EAAKK,OAAN,CAAatC,UAAU,aAAvB,UACE,eAACS,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAM,gBACNC,GAAG,qCACHC,SAvBsB,SAACV,GAC7BN,EDGwB,SAACe,EAAIjB,GAAL,OAAgB,SAACE,GAC3C,IAAMuB,EAAYC,MAASC,OAAO,uBAClCzB,EAAS,CACP0B,KAAMvC,EACNwC,QAAS,CAAEZ,KAAI2B,WAAY,CAAE5C,SAAQyB,iBCP5BoB,CAAa5B,EAAIT,KAuBpBH,UAAU,OALZ,UAOE,cAACc,EAAA,EAASC,KAAV,CAAeC,SAAU9B,EAAzB,SAAmCA,IACnC,cAAC4B,EAAA,EAASC,KAAV,CAAeC,SAAU7B,EAAzB,SAAgCA,OAElC,cAAC+B,EAAA,EAAD,CAAQR,QAAQ,YAAYS,QAhCV,WACtBtB,EDDuB,SAACe,GAAD,OAAQ,SAACf,GAClCA,EAAS,CACP0B,KAAMxC,EACNyC,QAAS,CAAEZ,SCFF6B,CAAY7B,KA+BjB,2BECO8B,MA3Cf,WAAwB,IAAD,EACiBpD,mBAASF,GAD1B,mBACduD,EADc,KACDC,EADC,KAKfC,EAFOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAGvCC,QAAO,YAAwB,IAArBvB,EAAoB,EAApBA,cACT,OAAIiB,IAAgBvD,GAGbsC,EAAc,GAAG/B,SAAWgD,KAEpCO,MAAK,SAACC,EAAGC,GACR,IAAMC,EAAkBF,EAAE1D,SAAW2D,EAAE3D,SACvC,OAAwB,IAApB4D,EACKF,EAAE5D,KAAK+D,cAAcF,EAAE7D,MAEzB8D,KAERtB,KAAI,SAACF,GAAD,OAAW,cAAC,EAAD,CAAsBA,MAAOA,GAAjBA,EAAMjB,OAMpC,OACE,gCACE,eAACH,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAM,SACNC,GAAG,8BACHC,SAViB,SAACV,GACtBoD,QAAQC,IAAIrD,GACZyC,EAAezC,IASXH,UAAU,OALZ,UAOE,cAACc,EAAA,EAASC,KAAV,CAAeC,SAAU9B,EAAzB,SAAmCA,IACnC,cAAC4B,EAAA,EAASC,KAAV,CAAeC,SAAU7B,EAAzB,SAAgCA,IAChC,cAAC2B,EAAA,EAASC,KAAV,CAAeC,SAAU5B,EAAzB,SAA+BA,OAEhCyD,MC7BQY,ICfAA,EDKf,WACE,OACE,eAACC,EAAA,EAAD,WACE,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,QECSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gCCLRQ,EAAe,GAuBNC,EArBK,WAAmC,IAAlCtB,EAAiC,uDAAzBqB,EAAcE,EAAW,uCACpD,OAAQA,EAAO/C,MACb,KAAKzC,EACH,MAAM,GAAN,mBAAWiE,GAAX,CAAkBuB,EAAO9C,UAC3B,KAAKzC,EACH,OAAOgE,EAAME,QAAO,qBAAGrC,KAAgB0D,EAAO9C,QAAQZ,MACxD,KAAK5B,EACH,OAAO+D,EAAMhB,KAAI,SAACwC,GAChB,OAAIA,EAAI3D,KAAO0D,EAAO9C,QAAQZ,GACrB,2BACF2D,GADL,IAEE7C,cAAc,CAAE4C,EAAO9C,QAAQe,YAAlB,mBAAiCgC,EAAI7C,kBAG/C6C,KAEX,QACE,OAAOxB,IClBEyB,cAAgB,CAC7BxB,KAAMqB,ICGFD,EAAe,CACnBpB,KCNsB,WACtB,IACE,IAAMyB,EAAiBC,aAAaC,QAAQ1F,GAC5C,GAAuB,OAAnBwF,EAAyB,CAC3B,IAAMG,EAAaC,KAAKC,MAAML,GAC9B,GAAIM,MAAMC,QAAQJ,GAChB,OAAOA,EAGX,MAAO,GACP,MAAOK,GACP,MAAO,IDRWC,IAMhBC,EAAa,CAACC,KAEdC,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YACZC,EACAvB,EACAiB,EAAiBO,IAAe,WAAf,EAAmBT,KAGtCM,EAAMI,WAAU,WACd,IAAMC,EAAOL,EAAMM,WAAW/C,MAAQ,ICLhB,SAACA,GACvB,IACE,IAAMyB,EAAiBI,KAAKmB,UAAUhD,GACtC0B,aAAauB,QAAQhH,EAAMwF,GAC3B,MAAOQ,KDETiB,CAAS,YAAIJ,OAGAL,QElBfU,IAASC,OACP,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFY,SAASC,eAAe,SAM1B3C,M","file":"static/js/main.0f62f972.chunk.js","sourcesContent":["export const ADD_ENTRY = 'ADD_ENTRY';\r\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\r\nexport const CHANGE_STATUS = 'CHANGE_STATUS';\r\n","export const LIST = 'list';\r\nexport const RAN_OUT = 'ranOut';\r\nexport const HAVE = 'have';\r\nexport const ALL = 'all';\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addEntry } from '../../actions/listActions';\r\nimport {\r\n  InputGroup,\r\n  FormControl,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Button,\r\n} from 'react-bootstrap';\r\nimport { RAN_OUT, HAVE } from '../../configs/constants';\r\n\r\nfunction AddEntry() {\r\n  const [name, setName] = useState('');\r\n  const [priority, setPriority] = useState('1');\r\n  const [status, setStatus] = useState(RAN_OUT);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onButtonClickHandler = () => {\r\n    dispatch(addEntry(name, status, priority));\r\n  };\r\n\r\n  const onStatusHandler = (e) => {\r\n    setStatus(e);\r\n  };\r\n\r\n  const onPriorityHandler = (e) => {\r\n    setPriority(e);\r\n  };\r\n  return (\r\n    <div>\r\n      <InputGroup className=\"mb-3\" value={name} onChange={onChangeHandler}>\r\n        <FormControl\r\n          placeholder=\"Item name\"\r\n          aria-label=\"Item name\"\r\n          aria-describedby=\"item name\"\r\n        />\r\n        <DropdownButton\r\n          variant=\"outline-secondary\"\r\n          title=\"Status\"\r\n          id=\"input-group-dropdown-status\"\r\n          onSelect={onStatusHandler}\r\n        >\r\n          <Dropdown.Item eventKey={RAN_OUT}>{RAN_OUT}</Dropdown.Item>\r\n          <Dropdown.Item eventKey={HAVE}>{HAVE}</Dropdown.Item>\r\n        </DropdownButton>\r\n        <DropdownButton\r\n          variant=\"outline-secondary\"\r\n          title=\"Priority\"\r\n          id=\"input-group-dropdown-priority\"\r\n          onSelect={onPriorityHandler}\r\n        >\r\n          <Dropdown.Item eventKey=\"1\">1</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"2\">2</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"3\">3</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"4\">4</Dropdown.Item>\r\n          <Dropdown.Item eventKey=\"5\">5</Dropdown.Item>\r\n        </DropdownButton>\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={onButtonClickHandler}>\r\n            Add item\r\n          </Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEntry;\r\n","import AddEntry from './AddEntry';\r\nexport default AddEntry;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport { ADD_ENTRY, CHANGE_STATUS, DELETE_ENTRY } from './types';\r\n\r\nexport const addEntry = (name, status, priority) => (dispatch) => {\r\n  const timeStamp = moment().format('DD/MM/YYYY HH:mm:ss');\r\n  dispatch({\r\n    type: ADD_ENTRY,\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      statusHistory: [{ status, timeStamp }],\r\n      priority,\r\n    },\r\n  });\r\n};\r\n\r\nexport const deleteEntry = (id) => (dispatch) => {\r\n  dispatch({\r\n    type: DELETE_ENTRY,\r\n    payload: { id },\r\n  });\r\n};\r\n\r\nexport const changeStatus = (id, status) => (dispatch) => {\r\n  const timeStamp = moment().format('DD/MM/YYYY HH:mm:ss');\r\n  dispatch({\r\n    type: CHANGE_STATUS,\r\n    payload: { id, statusItem: { status, timeStamp } },\r\n  });\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteEntry, changeStatus } from '../../actions/listActions';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { RAN_OUT, HAVE } from '../../configs/constants';\r\n\r\nfunction Entry({ entry: { id, name, statusHistory, priority } }) {\r\n  const statusHistoryList = statusHistory.map(({ status, timeStamp }) => (\r\n    <ListGroup.Item key={timeStamp}>\r\n      {timeStamp} : {status}\r\n    </ListGroup.Item>\r\n  ));\r\n  const dispatch = useDispatch();\r\n  const onRemoveHandler = () => {\r\n    dispatch(deleteEntry(id));\r\n  };\r\n  const onChangeStatusHandler = (e) => {\r\n    dispatch(changeStatus(id, e));\r\n  };\r\n  return (\r\n    <Card className=\"mb-2\">\r\n      <Card.Header as=\"h5\">{name}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Subtitle className=\"mb-2 text-muted\" key=\"status\">\r\n          Current status: {statusHistory[0].status}\r\n        </Card.Subtitle>\r\n        <Card.Subtitle className=\"mb-2 text-muted\" key=\"status\">\r\n          Status history:\r\n          <ListGroup variant=\"flush\">{statusHistoryList}</ListGroup>\r\n        </Card.Subtitle>\r\n        <Card.Subtitle className=\"mb-2 text-muted\" key=\"priority\">\r\n          Priority: {priority}\r\n        </Card.Subtitle>\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-muted\">\r\n        <DropdownButton\r\n          variant=\"outline-secondary\"\r\n          title=\"Change status\"\r\n          id=\"input-group-dropdown-change-status\"\r\n          onSelect={onChangeStatusHandler}\r\n          className=\"mb-2\"\r\n        >\r\n          <Dropdown.Item eventKey={RAN_OUT}>{RAN_OUT}</Dropdown.Item>\r\n          <Dropdown.Item eventKey={HAVE}>{HAVE}</Dropdown.Item>\r\n        </DropdownButton>\r\n        <Button variant=\"secondary\" onClick={onRemoveHandler}>\r\n          Remove\r\n        </Button>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Entry;\r\n","import Entry from './Entry';\r\nexport default Entry;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Entry from '../Entry';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { RAN_OUT, HAVE, ALL } from '../../configs/constants';\r\n\r\nfunction GroceryList() {\r\n  const [filterParam, setFilterParam] = useState(ALL);\r\n\r\n  const list = useSelector((state) => state.list);\r\n\r\n  const listItems = list\r\n    .filter(({ statusHistory }) => {\r\n      if (filterParam === ALL) {\r\n        return true;\r\n      }\r\n      return statusHistory[0].status === filterParam;\r\n    })\r\n    .sort((a, b) => {\r\n      const priorityCompare = a.priority - b.priority;\r\n      if (priorityCompare === 0) {\r\n        return a.name.localeCompare(b.name);\r\n      }\r\n      return priorityCompare;\r\n    })\r\n    .map((entry) => <Entry key={entry.id} entry={entry} />);\r\n\r\n  const onFilterSelect = (e) => {\r\n    console.log(e);\r\n    setFilterParam(e);\r\n  };\r\n  return (\r\n    <div>\r\n      <DropdownButton\r\n        variant=\"outline-secondary\"\r\n        title=\"Filter\"\r\n        id=\"input-group-dropdown-filter\"\r\n        onSelect={onFilterSelect}\r\n        className=\"mb-2\"\r\n      >\r\n        <Dropdown.Item eventKey={RAN_OUT}>{RAN_OUT}</Dropdown.Item>\r\n        <Dropdown.Item eventKey={HAVE}>{HAVE}</Dropdown.Item>\r\n        <Dropdown.Item eventKey={ALL}>{ALL}</Dropdown.Item>\r\n      </DropdownButton>\r\n      {listItems}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroceryList;\r\n","import React from 'react';\r\nimport AddEntry from '../AddEntry';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport GroceryList from '../GroceryList/GroceryList';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <h1>Grocery List</h1>\r\n      <AddEntry />\r\n      <GroceryList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_ENTRY, CHANGE_STATUS, DELETE_ENTRY } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ENTRY:\r\n      return [...state, action.payload];\r\n    case DELETE_ENTRY:\r\n      return state.filter(({ id }) => id !== action.payload.id);\r\n    case CHANGE_STATUS:\r\n      return state.map((obj) => {\r\n        if (obj.id === action.payload.id) {\r\n          return {\r\n            ...obj,\r\n            statusHistory: [action.payload.statusItem, ...obj.statusHistory],\r\n          };\r\n        }\r\n        return obj;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default listReducer;\r\n","import { combineReducers } from 'redux';\r\nimport listReducer from './listReducer';\r\n\r\nexport default combineReducers({\r\n  list: listReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport { loadData, saveData } from './localStorage';\r\n\r\nconst persistedData = loadData();\r\n\r\nconst initialState = {\r\n  list: persistedData,\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  const data = store.getState().list || [];\r\n  saveData([...data]);\r\n});\r\n\r\nexport default store;\r\n","import { LIST } from './configs/constants';\r\n\r\nexport const loadData = () => {\r\n  try {\r\n    const serializedData = localStorage.getItem(LIST);\r\n    if (serializedData !== null) {\r\n      const parsedData = JSON.parse(serializedData);\r\n      if (Array.isArray(parsedData)) {\r\n        return parsedData;\r\n      }\r\n    }\r\n    return [];\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n};\r\n\r\nexport const saveData = (list) => {\r\n  try {\r\n    const serializedData = JSON.stringify(list);\r\n    localStorage.setItem(LIST, serializedData);\r\n  } catch (err) {\r\n    // Ignore write errors.\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}